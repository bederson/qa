TODO

GAE Deployment
* download and install gsutil to make importing data easier:
  https://developers.google.com/cloud-sql/docs/import_export#migrate
* create Google Cloud SQL database user to use instead of root
  
Suggestions
* Login: add note when you login that your name/id will be displayed
* Login: authenticated_user_id will always stay the same but authenticated_nickname can change
         Check and update if needed when user logs in

* Notes: Consider asking users to suggest categories when ideas created
* Notes: add done button to note entry and notify instructor
         (implemented but not stored so if admin refreshes admin page or browses away count will be lost)
         (if student refreshes page and starts adding more notes, admin not notified)
* Notes: inform users how many ideas have been contributed so far

* Categorize: change waiting text to something like "Done - wait until others are finished"; hide step x of y text
* Categorize: word "task" confusing
* Categorize: add question outside white box
* Categorize: Use stemming when comparing categories for equality
* Categorize: Consider when it would speed things up to check for duplicate categories/ideas before step 3
* Categorize: Should CASCADE_MAX_UNCATEGORIZED be a fixed number or percentage of ideas? Editable by question author?
* Categorize: Consider blinking browser header when new step available, or highlighting some way
* Categorize: Remove/merge any duplicate ideas before starting cascade
* Categorize: Need to decide how to best calculate voting threshold used in cascade (in steps and when generating categories)
* Categorize: Instead of pushing first cascade job to users, change gui to say ready to being categorizing 
              (and require user to request job assignment)
                                      
* Results: if note in multiple categories, list "also in" categories
* Results: add "discuss" button to categories and items and show counts
* Results: allow users to expand/collapse individual categories
* Results: sort by category item count
* Results: only show tag clouds when category has >= 10 notes
* Results: consider showing categories suggested by not used
* Results: display categories like a network where shared notes are the edges
* Results: use Whiz to display results
* Results: When should singletons be removed or included in results
* Results: Create hierarchical categories (look at results of #89507 on qa-umd.appspot.com)
* Results: Make word clouds clickable (show ideas & categories where word appears)

* Admin: Allow question author to set maximum # of ideas allowed
* Admin: Allow question author to release incomplete cascade assignments after some period of inactivity
* Admin: one cascade configuration value => # students
* Admin: recommend smaller group cascade setting (t) to balance jobs among available users
* Admin: add option to hide names completely for a question
* Admin: Update # users shown on admin panel (easier to do if only one channel created per user)
* Admin: Allow admins to logout students
* Admin: Suggest cascade settings based on # of ideas, # of users, etc.
* Admin: Need better way to create unique question id
* Admin: Do not allow Cascade to be enabled until notes exist

* Misc: Need consistent terminology (e.g., submission/note/response/idea, person/user/author)
* Misc: Create/check database indexes
* Misc: Destroy channels after some specified period (or does that happen automatically?)
* Misc: Consider what can be stored in datastore and/or memcache to improve performance (categories, etc.)
* Misc: Need to better understand what reasonable defaults should be set in queue.yaml
* Misc: Reduce usage of Google Cloud Sql where possible to reduce cost
* Misc: Design GUI to work on mobile devices
* Misc: Reduce page reloads to reduce unnecessary server calls and # of channels created
* Misc: Notify active users when question disabled or deleted
* Misc: Create cronjob to clean up any users who have been logged in for a long time (remember to unassign jobs)
        Consider what needs to be done when channels expire
* Misc: Consider whether or not to delete tmp cascade data once categories have been generated 
        (esp. since some tables like cascade_fit_categories_phase1 may get very large)
* Misc: Code would be cleaner (esp. login/logout) if channel only created once per user
        Currently code is created every time user visits a page and disconnect when they leave it
                
Known Bugs
* Can't submit idea when Chrome "disconnect.me" plugin installed
* When user logs in first time, Google asks for permission and then doesn't always redirect to application as expected
* Observed instance when GUI did not switch from note input to cascade categorization when testing with group
* If many users working concurrently, it may be possible for a job to be assigned to multiple users
  Currently the first job submitted is saved in the database
  Subsequent saved jobs are silently ignored but the count is recorded in the cascade_times table
  Would need to use transactions and select..for update to fix
  Not sure how frequently this may happen
  Don't think deadlock errors will occur if updates happen at exactly the same time (will wait until lock released)
* If many users working concurrently, it may be possible for multiple users to authenticate with same nickname 
  (but they should still have unique id)
* Sometimes user and channel not deleted from database
  (if user still logged in from before, can they get job assigned if client still exists?)
  
Testing
* Nickname authentication needs to be tested more completely (see known bugs)
* Build test harness
  (look at the Firefox extension Selenium: seleniumhq.org)

Design Issues
* General tension between student individual focus and how much they see of collective activity
* What are implications of having students wait until others finish before moving to next step
* Is it better to make users explicitly select Y or N for category fit tasks or is it ok to default to N to reduce clicks

Google Cloud SQL
* Google Cloud SQL uses MySQL 5.5 (using 5.6 for local testing)
* google_app_engine_sdk_path/google_sql.py
* https://developers.google.com/appengine/training/cloud-sql/deploy_the_app

****** OLD ******

New approaches
* Cluster based on tags
* New clustering approach by asking student to incrementally say which items are most similar
* Final reclustering step based tags
* Have student provide drawings, and do peer clustering
* Provide a picture with a question, and have students point to place on image that provides answer (and aggregate answers)
* Combine with MOOC to give community of participants the ability to participate in real-time with each other
* Regular polls
* "Tag" with a fixed vocabulary - which would turn into a collective grading exercise. If participants could get back
  their originally contributed ideas, then it would turn into a kind of peer grading platform
  
Bugs
* Users occasionally get the same idea assigned to them multiple times - why???
* Need better random assignment algorithm - seems very clumpy
  Made an improvement, need to try it with a class
* Can't submit idea when Chrome "disconnect.me" plugin installed
* Channels raises onError sometimes (even when they are new):
  > Channel ERROR:  utils.js:69
  > Object {description: "", code: 400} utils.js:70
  http://stackoverflow.com/questions/13962739/intermittent-error-code-400-description-on-client-connecting-to-channel
  https://code.google.com/p/googleappengine/issues/detail?id=4940
    
Clustering
* Look at MALLET - http://mallet.cs.umass.edu/topics.php
* Read Jordan's paper